{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from 'react';\nimport AppLoading from 'expo-app-loading';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport LoginScreen from \"./screens/auth/LoginScreen\";\nimport RegisterScreen from \"./screens/auth/RegisterScreen\";\nimport { useRoute } from \"./router\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function App() {\n  var routing = useRoute(true);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isReady = _useState2[0],\n      setIsReady = _useState2[1];\n\n  return _jsx(NavigationContainer, {\n    children: routing\n  });\n}\nvar styles = StyleSheet.create({\n  container: {}\n});","map":{"version":3,"sources":["E:/Projects/CostPlanner/cost-planner-frontend/App.js"],"names":["useState","AppLoading","NavigationContainer","LoginScreen","RegisterScreen","useRoute","App","routing","isReady","setIsReady","styles","StyleSheet","create","container"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAOC,WAAP;AACA,OAAOC,cAAP;AACA,SAASC,QAAT;;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B,MAAMC,OAAO,GAAGF,QAAQ,CAAC,IAAD,CAAxB;;AAEA,kBAA8BL,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOQ,OAAP;AAAA,MAAgBC,UAAhB;;AAYA,SAAO,KAAC,mBAAD;AAAA,cAAsBF;AAAtB,IAAP;AACD;AAED,IAAMG,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AADoB,CAAlB,CAAf","sourcesContent":["import { useState } from 'react';\nimport AppLoading from 'expo-app-loading';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\n\nimport LoginScreen from './screens/auth/LoginScreen';\nimport RegisterScreen from './screens/auth/RegisterScreen';\nimport { useRoute } from './router';\n\nexport default function App() {\n  const routing = useRoute(true);\n\n  const [isReady, setIsReady] = useState(false);\n\n  // if (!isReady) {\n  //   return (\n  //     <AppLoading\n  //       startAsync={loadApplication}\n  //       onFinish={() => setIsReady(true)}\n  //       onError={console.warn}\n  //     />\n  //   );\n  // }\n\n  return <NavigationContainer>{routing}</NavigationContainer>;\n}\n\nconst styles = StyleSheet.create({\n  container: {}\n});\n"]},"metadata":{},"sourceType":"module"}